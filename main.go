// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
func handleMessage(bot *tgbotapi.BotAPI, message *tgbotapi.Message) {
	chatID := message.Chat.ID

	if waitingForAdd[chatID] {
		movie := strings.TrimSpace(message.Text)
		if movie == "" {
			msg := tgbotapi.NewMessage(chatID, "–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
			bot.Send(msg)
			return
		}

		movieList = append(movieList, movie)
		waitingForAdd[chatID] = false 

		msg := tgbotapi.NewMessage(chatID, fmt.Sprintf("–§–∏–ª—å–º '%s' –¥–æ–±–∞–≤–ª–µ–Ω!", movie))
		bot.Send(msg)

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Å–Ω–æ–≤–∞
		sendMainMenu(bot, chatID)
		return
	}

	switch message.Text {
	case "/start":
		sendMainMenu(bot, chatID)
	default:
		msg := tgbotapi.NewMessage(chatID, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ.")
		bot.Send(msg)

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Å–Ω–æ–≤–∞
		sendMainMenu(bot, chatID)
	}
}

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–æ–∫
func handleCallback(bot *tgbotapi.BotAPI, callback *tgbotapi.CallbackQuery) {
	chatID := callback.Message.Chat.ID

	switch callback.Data {
	case "add":
		waitingForAdd[chatID] = true
		msg := tgbotapi.NewMessage(chatID, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:")
		bot.Send(msg)

	case "remove":
		if len(movieList) == 0 {
			msg := tgbotapi.NewMessage(chatID, "–°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –ø—É—Å—Ç.")
			bot.Send(msg)
		} else {
			var rows [][]tgbotapi.InlineKeyboardButton
			for _, movie := range movieList {
				rows = append(rows, tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData(movie, "del_"+movie),
				))
			}
			keyboard := tgbotapi.NewInlineKeyboardMarkup(rows...)
			msg := tgbotapi.NewMessage(chatID, "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å–º –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:")
			msg.ReplyMarkup = keyboard
			bot.Send(msg)
		}

	case "watched":
		if len(movieList) == 0 {
			msg := tgbotapi.NewMessage(chatID, "–°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –ø—É—Å—Ç.")
			bot.Send(msg)
		} else {
			var rows [][]tgbotapi.InlineKeyboardButton
			for _, movie := range movieList {
				if !strings.Contains(movie, "‚úÖ") {
					rows = append(rows, tgbotapi.NewInlineKeyboardRow(
						tgbotapi.NewInlineKeyboardButtonData(movie, "watch_"+movie),
					))
				}
			}
			keyboard := tgbotapi.NewInlineKeyboardMarkup(rows...)
			msg := tgbotapi.NewMessage(chatID, "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å–º, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏:")
			msg.ReplyMarkup = keyboard
			bot.Send(msg)
		}

	case "list":
		if len(movieList) == 0 {
			msg := tgbotapi.NewMessage(chatID, "–°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –ø—É—Å—Ç.")
			bot.Send(msg)
		} else {
			msg := tgbotapi.NewMessage(chatID, "–í–∞—à–∏ —Ñ–∏–ª—å–º—ã:\n" + strings.Join(movieList, "\n"))
			bot.Send(msg)
		}

	case "refresh":
		sendMainMenu(bot, chatID) // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –º–µ–Ω—é

	default:
		if strings.HasPrefix(callback.Data, "del_") {
			movie := strings.TrimPrefix(callback.Data, "del_")
			removeMovie(movie)
			msg := tgbotapi.NewMessage(chatID, fmt.Sprintf("–§–∏–ª—å–º '%s' —É–¥–∞–ª–µ–Ω!", movie))
			bot.Send(msg)
		} else if strings.HasPrefix(callback.Data, "watch_") {
			movie := strings.TrimPrefix(callback.Data, "watch_")
			markMovieWatched(movie)
			msg := tgbotapi.NewMessage(chatID, fmt.Sprintf("–§–∏–ª—å–º '%s' –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π ‚úÖ", movie))
			bot.Send(msg)
		}
	}

	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Å–Ω–æ–≤–∞
	sendMainMenu(bot, chatID)
}

// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
func sendMainMenu(bot *tgbotapi.BotAPI, chatID int64) {
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º", "add"),
			tgbotapi.NewInlineKeyboardButtonData("‚ùå –£–¥–∞–ª–∏—Ç—å —Ñ–∏–ª—å–º", "remove"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ", "watched"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫", "list"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é", "refresh"),
		),
	)

	msg := tgbotapi.NewMessage(chatID, "üé¨ *–í–∞—à —Å–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤*\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
	msg.ParseMode = "Markdown"
	msg.ReplyMarkup = keyboard
	bot.Send(msg)
}
